% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SmoothCurve.R
\name{SmoothCurve}
\alias{SmoothCurve}
\title{Local linear smooth for partially observed data}
\usage{
SmoothCurve(p, M, Y, randp, N_vec)
}
\arguments{
\item{p}{The dimension of functional time series.}

\item{M}{The predetermined number of discrete points\eqn{(u_m(1\leq m\leq M))} in the functional domain\eqn{[0,1]}.}

\item{Y}{a list of \eqn{n}, with each is a vector  \eqn{(X^*_{t,1,1},...,
X^*_{t,1,N_{t,1}},X^*_{t,2,1},\ldots,X^*_{t,2,N_{t,2}},\ldots,X^*_{t,p,N_{t,p}})}.}

\item{randp}{a list of \eqn{n}, with each is a vector  \eqn{(u^t_{1,1},...,
u^t_{1,N_{t,1}},u^t_{2,1},...,u^t_{2,N_{t,2}},...,u^t_{p,N_{t,p}})}.}

\item{N_vec}{a list of \eqn{n}, with each is a vector  \eqn{(N_{t,1},...,N_{t,p})}.}
}
\value{
An object of class "SmoothCurve" is a \eqn{n*H}  matrix
\eqn{(hatX_{t,v})_{n*H}} with \eqn{H=p*M}; \eqn{hatX_{t,v}=
hatX_{t,j}(u_m)} with \eqn{j=\floor(v/M)} and  \eqn{m= v-(j-1)*M}.
}
\description{
\code{SmoothCurve()} implements the local linear smoothing method.
}
\examples{

# Assume N_{t,j}=N for all (t,j)
n <- 100
p <- 5
M <- 30
N <- 50
randp <- list()
for(t in 1:n){
  vec_test <- rep(NA,p*N)
  for(j in 1:p){
    vec_test[((j-1)*N+1):(j*N) ]<- sort(runif(N))
  }
  randp[[t]] <- vec_test
}
N_vec <- list()
for(t in 1:n){
  N_vec[[t]] <- rep(N,p)
}
Y <- list()
for(t in 1:n){
  Y[[t]] <- rnorm(p*N)
}
SmoothCurve(p,M,Y,randp,N_vec)

}
\references{
Yang, L., Feng, Z. and Jiang, Q. (2024+).
\emph{Test for the mean of high-dimensional functional time series}.
}
